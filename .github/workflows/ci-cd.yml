name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false

  publish-executables:
    needs: build-and-test
    if: github.event_name == 'release'
    runs-on: windows-latest
    strategy:
      matrix:
        runtime: [win-x64, win-arm64]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish ${{ matrix.runtime }}
      run: |
        dotnet publish --configuration Release --runtime ${{ matrix.runtime }} --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true --output ./publish/${{ matrix.runtime }}

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path ./publish/${{ matrix.runtime }}/* -DestinationPath AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.zip

    - name: Calculate checksums
      run: |
        Get-FileHash -Path AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.zip -Algorithm SHA256 | Select-Object Hash | Out-File -FilePath AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.sha256

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.zip
        asset_name: AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.zip
        asset_content_type: application/zip

    - name: Upload Checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.sha256
        asset_name: AION-Desktop-Assistant-${{ github.ref_name }}-${{ matrix.runtime }}.sha256
        asset_content_type: text/plain

  security-scan:
    runs-on: windows-latest
    permissions:
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Run security scan
      uses: microsoft/security-devops-action@v1
      with:
        categories: 'secrets,code'
